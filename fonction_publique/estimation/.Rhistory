data_obs =  data_min[which(data_min$left_censored == F & data_min$generation < 1990),]
data_obs = create_variables(data_obs)
data_est =  data_obs[which(data_obs$annee  == 2011),]
data_ini =  data_obs[which(data_obs$left_censored == F  & data_obs$annee == 2011),]
names(data_ini)
estimMNL  = mlogit.data(data_est, shape = "wide", choice = "next_year")
estimGLM  = data_est
##  I.1 MNM logit ##
mlog1 = mlogit(next_year ~ 0 | sexe + generation_group2 + c_cir_2011
+  duration + duration2 + duration3,
data = estimMNL, reflevel = "no_exit")
mlog0 = mlogit(next_year ~ 0 | 1,
data = estimMNL, reflevel = "no_exit")
##  I.2 Model par grade ##
list1 = which(estimMNL$c_cir_2011 == "TTH1")
list2 = which(estimMNL$c_cir_2011 == "TTH2")
list3 = which(estimMNL$c_cir_2011 == "TTH3")
list4 = which(estimGLM$c_cir_2011 == "TTH4")
estimGLM$exit2 = ifelse(estimGLM$next_year == 'exit_oth',1, 0)
mTTH1 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC + I_bothE + duration + duration2 + duration3,
data = estimMNL[list1, ], reflevel = "no_exit")
mTTH2 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC +  duration + duration2 + duration3,
data = estimMNL[list2, ], reflevel = "no_exit")
mTTH3 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC +  duration + duration2 + duration3,
data = estimMNL[list3, ], reflevel = "no_exit")
mTTH4 = glm(exit2 ~  sexe + generation_group2 +
duration + duration2 + duration3,
data = estimGLM[list4, ], x=T, family=binomial("logit"))
##  I.3 Model sequentiel ##
estimGLM$exit = ifelse(estimGLM$next_year == 'exit_oth' | estimGLM$next_year =='exit_next', 1, 0)
estimGLM2 = estimGLM[which(estimGLM$exit == 1), ]
estimGLM2$exit_next = ifelse(estimGLM2$next_year =='exit_next', 1, 0)
step1 <- glm(exit ~  sexe + generation_group2 + c_cir_2011 +
I_bothC + I_bothE + duration + duration2 + duration3,
data=estimGLM, x=T, family=binomial("logit"))
step2 <- glm(exit_next ~  sexe + generation_group2 + c_cir_2011 +
I_bothC + I_bothE + duration + duration2 + duration3,
data=estimGLM2 , x=T, family=binomial("logit"))
adhoc <- sample(c("no_exit",   "exit_next", "exit_oth"), nrow(data_ini), replace=TRUE, prob = c(0.2, 0.2, 0.6))
data_ini$next_year <-adhoc
data_predict <- mlogit.data(data_ini, shape = "wide", choice = "next_year")
data_ini
##  I.1 MNM logit ##
list_models = list(mlog1, mlog2, mlog3)
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
mlog2 = mlogit(next_year ~ 0 | sexe + generation_group2 + c_cir_2011
+  duration + duration2 + duration3,
data = estimMNL, reflevel = "no_exit")
list_models = list(mlog1, mlog2, mlog3)
mlog3 = mlogit(next_year ~ 0 | sexe + generation_group2 + c_cir_2011
+  duration + duration2 + duration3
+ I_bothC + I_bothE,
data = estimMNL, reflevel = "no_exit")
list_models = list(mlog1, mlog2, mlog3)
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
data_sim =  data_obs[which(data_obs$left_censored == F  & data_obs$annee == 2011),]
##  I.1 MNM logit ##
list_models = list(mlog1, mlog2, mlog3)
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
next_year_hat
data_sim[, next_year_hat]
length(data_sim[, next_year_hat])
names(data_sim)
##  I.1 MNM logit ##
list_models = list(mlog1, mlog2, mlog3)
predMNL = data_sim$ident
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
predMNL = cbind(predMNL, data_sim[, next_year_hat])
}
View(predMNL)
ident = data_sim$ident
predMNL = as.data.frame(data_sim$ident)
View(predMNL)
? as.data.frame
##  I.1 MNM logit ##
list_models = list(mlog1, mlog2, mlog3)
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
mTTH1_1 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC + I_bothE + duration + duration2 + duration3,
data = estimMNL[list1, ], reflevel = "no_exit")
mTTH2_1 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC +  duration + duration2 + duration3,
data = estimMNL[list2, ], reflevel = "no_exit")
mTTH3_1 = mlogit(next_year ~ 0 | sexe + generation_group2 +
I_bothC +  duration + duration2 + duration3,
data = estimMNL[list3, ], reflevel = "no_exit")
mTTH4_1 = glm(exit2 ~  sexe + generation_group2 +
duration + duration2 + duration3,
data = estimGLM[list4, ], x=T, family=binomial("logit"))
##  I.3 Model sequentiel ##
estimGLM$exit = ifelse(estimGLM$next_year == 'exit_oth' | estimGLM$next_year =='exit_next', 1, 0)
estimGLM2 = estimGLM[which(estimGLM$exit == 1), ]
estimGLM2$exit_next = ifelse(estimGLM2$next_year =='exit_next', 1, 0)
step1_1 <- glm(exit ~  sexe + generation_group2 + c_cir_2011 +
I_bothC + I_bothE + duration + duration2 + duration3,
data=estimGLM, x=T, family=binomial("logit"))
step2_1 <- glm(exit_next ~  sexe + generation_group2 + c_cir_2011 +
I_bothC + I_bothE + duration + duration2 + duration3,
data=estimGLM2 , x=T, family=binomial("logit"))
adhoc <- sample(c("no_exit",   "exit_next", "exit_oth"), nrow(data_sim), replace=TRUE, prob = c(0.2, 0.2, 0.6))
data_sim$next_year <-adhoc
data_predict_MNL <- mlogit.data(data_sim, shape = "wide", choice = "next_year")
data_predict     <- data_sim
list_models = list(mlog1, mlog2, mlog3)
for (m in 1:length(list_models))
{
model = list_models[[m]]
prob     <- predict(model, data_predict_MNL,type = "response")
next_year_hat <-  paste0("next_year_hat_MNL_", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
list_models = list(mTTH1, mTTH2, mTTH3, mTTH4)
m = 1
model = list_models[[m]]
prob     <- predict(model, data_predict_MNL,type = "response")
next_year_hat <-  paste0("next_year_TTH", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
next_year_hat
prob
m = 4
model = list_models[[m]]
prob     <- predict(model, data_predict, type = "response")
prob
mapply(tirage, prob)
list_models = list(mTTH1, mTTH2, mTTH3, mTTH4)
for (m in 1:length(list_models))
{
model = list_models[[m]]
if (m < 4)
{
prob     <- predict(model, data_predict_MNL,type = "response")
next_year_hat <-  paste0("next_year_TTH", toString(m))
data_sim[, next_year_hat] <- mapply(predict_next_year, prob[,1], prob[,2], prob[,3])
}
if (m == 4)
{
prob     <- predict(model, data_predict, type = "response")
pred     <- as.numeric(mapply(tirage, prob))
next_year_hat <-  paste0("next_year_TTH", toString(m))
data_sim[, next_year_hat] <- ifelse(pred == 1, "exit_oth", "no_exit")
}
}
names(data_sim)
data_sim$next_year_byG_1 = data_sim$next_year_TTH1
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH2")] =  data_sim$next_year_TTH2[which(data_sim$c_cir_2011 == "TTH2")]
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH3")] =  data_sim$next_year_TTH2[which(data_sim$c_cir_2011 == "TTH3")]
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH4")] =  data_sim$next_year_TTH2[which(data_sim$c_cir_2011 == "TTH4")]
prob1     <- predict(step1_1, data_predict, type = "response")
prob2     <- predict(step2_1, data_predict, type = "response")
pred2     <- as.numeric(mapply(tirage, prob2))
pred2
prob1     <- predict(step1_1, data_predict, type = "response")
pred1     <- as.numeric(mapply(tirage, prob1))
prob2     <- predict(step2_1, data_predict, type = "response")
pred2     <- as.numeric(mapply(tirage, prob2))
data_sim$next_year_MS_1 <- ifelse(pred1 == 1, "exit", "no_exit")
data_sim$next_year_MS_1[which(pred1 == 1 & pred2 = 1)] <- "exit_next"
data_sim$next_year_MS_1[which(pred1 == 1 & pred2 = 0)] <- "exit_oth"
prob1     <- predict(step1_1, data_predict, type = "response")
pred1     <- as.numeric(mapply(tirage, prob1))
prob2     <- predict(step2_1, data_predict, type = "response")
pred2     <- as.numeric(mapply(tirage, prob2))
data_sim$next_year_MS_1 <- ifelse(pred1 == 1, "exit", "no_exit")
data_sim$next_year_MS_1[which(pred1 == 1 & pred2 == 1)] <- "exit_next"
data_sim$next_year_MS_1[which(pred1 == 1 & pred2 == 0)] <- "exit_oth"
for (v in c("next_year_hat_MNL_2","next_year_byG_1", "next_year_MS_1"))
{
table(data_sim[,v])
}
for (v in c("next_year_hat_MNL_2","next_year_byG_1", "next_year_MS_1"))
{
print(table(data_sim[,v]) )
}
names(data_sim)
for (v in c("next_year", "next_year_hat_MNL_2","next_year_byG_1", "next_year_MS_1"))
{
print(table(data_sim[,v]) )
}
data_sim$annee
mlogit.data
? mlogit.data
names(data_sim)
#
for (v in c("next_grade_situation", "next_year_hat_MNL_2","next_year_byG_1", "next_year_MS_1"))
{
print(table(data_sim[,v]) )
}
data_sim$next_year_byG_1 = data_sim$next_year_TTH1
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH2")] =  data_sim$next_year_TTH2[which(data_sim$c_cir_2011 == "TTH2")]
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH3")] =  data_sim$next_year_TTH3[which(data_sim$c_cir_2011 == "TTH3")]
data_sim$next_year_byG_1[which(data_sim$c_cir_2011 == "TTH4")] =  data_sim$next_year_TTH4[which(data_sim$c_cir_2011 == "TTH4")]
#
for (v in c("next_grade_situation", "next_year_hat_MNL_2","next_year_byG_1", "next_year_MS_1"))
{
print(table(data_sim[,v]) )
}
list_all_models = c("next_year_hat_MNL_1", "next_year_hat_MNL_2","next_year_hat_MNL_3","next_year_byG_1", "next_year_MS_1")
launch_prediction_Py(annee, modelname)
# Load and save results
simul_py = load_simul_py(annee, modelname)
##  Paths ####
rm(list = ls()); gc()
user = "simrab"
if (user == "simrab")
{
wd =  'U:/Projets/CNRACL/fonction-publique/fonction_publique/estimation/'
data_path = "M:/CNRACL/output/"
save_model_path = "Q:/CNRACL/predictions/"
simul_path  = "M:/CNRACL/simulation/results/"
python_file_path = 'U:/Projets/CNRACL/fonction-publique/fonction_publique/estimation/'
git_path =  'XXX/IPP/CNRACL'
fig_path = "Q:/CNRACL/Note CNRACL/Figures/"
tab_path = "Q:/CNRACL/Note CNRACL/Figures/"
}
setwd(wd)
### 0. Initialisation ####
source(paste0(wd, "0_Outils_CNRACL.R"))
# Load results
load(paste0(simul_path, "predictions.Rdata"))
table_gain_ib = function(data, var_ib, var_situation)
{
data$var_ib = data[, var_ib]
data$var_situation = data[, var_situation]
data$next_ib = ave(data$ib, data$ident, FUN = shift1)
data$gain_ib = data$next_ib - data$ib
data$I_gain = ifelse(data$gain_ib >0, 1, 0)
data$gain_ib_pct = 100*(data$gain_ib)/data$ib
data = data[which(data$annee < 2015),]
table = numeric(1)
table[1] = mean(data$gain_ib)
table[2] = median(data$gain_ib_pct)
table[3] = 100*mean(data$I_gain)
list_grade = c("TTH1", "TTH2", "TTH3", "TTH4")
for (g in 1:length(list_grade))
{
list = which(data$c_cir_2011 == list_grade[g])
table[3*g+1] = mean(data$gain_ib[list])
table[3*g+2] = median(data$gain_ib_pct[list])
table[3*g+3] = 100*mean(data$I_gain[list])
}
list = which(data$var_situation == "no_exit")
table[16] = mean(data$gain_ib[list])
table[17] = 100*mean(data$I_gain[list])
list = which(data$var_situation == "exit_next")
table[18] = mean(data$gain_ib[list])
table[19] = 100*mean(data$I_gain[list])
list = which(data$var_situation == "exit_oth")
table[20] = mean(data$gain_ib[list])
table[21] = 100*mean(data$I_gain[list])
return(table)
}
obs = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_3", "BG_1","MS_1" ))
{
var_situation = paste0("situation_", m)
var_ib = paste0("ib_", m)
table = table_gain_ib(output_global, exit_var = var)
assign(paste0("table_", m), table)
}
obs
obs = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
obs = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_2", "MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
table = cbind(obs, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
table = cbind(obs, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
colnames(table) = c('Observed', "MNL_2", "MNL_3", "BG_1","MS_1" )
rownames(table) = c("gain ib moyen", "gain ib median en \\%", "\\% gain ib > 0",
"gain ib moyen TTH1", "gain ib median en \\% TTH1", "\\% gain ib > 0  TTH1",
"gain ib moyen TTH2", "gain ib median en \\% TTH2", "\\% gain ib > 0  TTH2",
"gain ib moyen TTH3", "gain ib median en \\% TTH3", "\\% gain ib > 0 TTH3",
"gain ib moyen TTH4", "gain ib median en \\% TTH4", "\\% gain ib > 0 TTH4",
"gain ib moyen no_exit", "\\% gain ib > 0 no_exit",
"gain ib moyen exit_next", "\\% gain ib > 0 exit_next",
"gain ib moyen exit_oth", "\\% gain ib > 0 exit_oth"
)
table
View(output_global)
summary(output_global$ib[which(output_global$annee == 2011)] - output_global$ib_MNL_3[which(output_global$annee == 2011)] )
summary(output_global$ib[which(output_global$annee == 2012)] - output_global$ib_MNL_3[which(output_global$annee == 2012)] )
table_gain_ib = function(data, var_ib, var_situation)
{
data$var_ib = data[, var_ib]
data$var_situation = data[, var_situation]
data$next_ib = ave(data$var_ib, data$ident, FUN = shift1)
data$gain_ib = data$next_ib - data$var_ib
data$I_gain = ifelse(data$gain_ib >0, 1, 0)
data$gain_ib_pct = 100*(data$gain_ib)/data$var_ib
data = data[which(data$annee < 2015),]
table = numeric(1)
table[1] = mean(data$gain_ib)
table[2] = median(data$gain_ib_pct)
table[3] = 100*mean(data$I_gain)
list_grade = c("TTH1", "TTH2", "TTH3", "TTH4")
for (g in 1:length(list_grade))
{
list = which(data$c_cir_2011 == list_grade[g])
table[3*g+1] = mean(data$gain_ib[list])
table[3*g+2] = median(data$gain_ib_pct[list])
table[3*g+3] = 100*mean(data$I_gain[list])
}
list = which(data$var_situation == "no_exit")
table[16] = mean(data$gain_ib[list])
table[17] = 100*mean(data$I_gain[list])
list = which(data$var_situation == "exit_next")
table[18] = mean(data$gain_ib[list])
table[19] = 100*mean(data$I_gain[list])
list = which(data$var_situation == "exit_oth")
table[20] = mean(data$gain_ib[list])
table[21] = 100*mean(data$I_gain[list])
return(table)
}
obs = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_2", "MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
table = cbind(obs, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
colnames(table) = c('Observed', "MNL_2", "MNL_3", "BG_1","MS_1" )
rownames(table) = c("gain ib moyen", "gain ib median en \\%", "\\% gain ib > 0",
"gain ib moyen TTH1", "gain ib median en \\% TTH1", "\\% gain ib > 0  TTH1",
"gain ib moyen TTH2", "gain ib median en \\% TTH2", "\\% gain ib > 0  TTH2",
"gain ib moyen TTH3", "gain ib median en \\% TTH3", "\\% gain ib > 0 TTH3",
"gain ib moyen TTH4", "gain ib median en \\% TTH4", "\\% gain ib > 0 TTH4",
"gain ib moyen no_exit", "\\% gain ib > 0 no_exit",
"gain ib moyen exit_next", "\\% gain ib > 0 exit_next",
"gain ib moyen exit_oth", "\\% gain ib > 0 exit_oth"
)
mdigit <- matrix(c(rep(2,(ncol(table)+1)*12),rep(0,(ncol(table)+1)*8)),
nrow = nrow(table), ncol=ncol(table)+1, byrow=T)
print(xtable(table,nrow = nrow(table_movers),
ncol=ncol(table_movers)+1, byrow=T, digits = 2),
sanitize.text.function=identity,size="\\footnotesize", hline.after = c(0, 3, 6, 9, 12, 15, 17, 19, 21),
only.contents=F, include.colnames = T)
var_ib = paste0("ib_", m)
paste0("situation_", m) )
data = output_global
data$var_ib = data[, var_ib]
data$var_situation = data[, var_situation]
data$next_ib = ave(data$var_ib, data$ident, FUN = shift1)
data$gain_ib = data$next_ib - data$var_ib
data$I_gain = ifelse(data$gain_ib >0, 1, 0)
data$gain_ib_pct = 100*(data$gain_ib)/data$var_ib
data = data[which(data$annee < 2015),]
table = numeric(1)
table[1] = mean(data$gain_ib)
table[2] = median(data$gain_ib_pct)
table[3] = 100*mean(data$I_gain)
table_MNL_2
data$var_ib = data[, var_ib]
data$var_ib
data$var_situation = data[, var_situation]
data$var_situation
data$next_ib = ave(data$var_ib, data$ident, FUN = shift1)
data$gain_ib = data$next_ib - data$var_ib
data$I_gain = ifelse(data$gain_ib >0, 1, 0)
data$gain_ib_pct = 100*(data$gain_ib)/data$var_ib
data = data[which(data$annee < 2015),]
table = numeric(21)
mean(data$gain_ib)
View(output_global)
length(unique(data$ident[which(is.na(data$ib_MNL_1))]))
length(unique(data$ident[which(is.na(data$ib_MNL_2))]))
length(unique(data$ident[which(is.na(data$ib_MNL_3))]))
table[1] = mean(data$gain_ib, na.rm = T)
table[2] = median(data$gain_ib_pct, na.rm = T)
table[3] = 100*mean(data$I_gain, na.rm = T)
table
table_gain_ib = function(data, var_ib, var_situation)
{
data$var_ib = data[, var_ib]
data$var_situation = data[, var_situation]
data$next_ib = ave(data$var_ib, data$ident, FUN = shift1)
data$gain_ib = data$next_ib - data$var_ib
data$I_gain = ifelse(data$gain_ib >0, 1, 0)
data$gain_ib_pct = 100*(data$gain_ib)/data$var_ib
data = data[which(data$annee < 2015),]
table = numeric(21)
table[1] = mean(data$gain_ib, na.rm = T)
table[2] = median(data$gain_ib_pct, na.rm = T)
table[3] = 100*mean(data$I_gain, na.rm = T)
list_grade = c("TTH1", "TTH2", "TTH3", "TTH4")
for (g in 1:length(list_grade))
{
list = which(data$c_cir_2011 == list_grade[g])
table[3*g+1] = mean(data$gain_ib[list], na.rm = T)
table[3*g+2] = median(data$gain_ib_pct[list], na.rm = T)
table[3*g+3] = 100*mean(data$I_gain[list], na.rm = T)
}
list = which(data$var_situation == "no_exit")
table[16] = mean(data$gain_ib[list], na.rm = T)
table[17] = 100*mean(data$I_gain[list], na.rm = T)
list = which(data$var_situation == "exit_next")
table[18] = mean(data$gain_ib[list], na.rm = T)
table[19] = 100*mean(data$I_gain[list], na.rm = T)
list = which(data$var_situation == "exit_oth")
table[20] = mean(data$gain_ib[list], na.rm = T)
table[21] = 100*mean(data$I_gain[list], na.rm = T)
return(table)
}
obs = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_2", "MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(data = output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
table = cbind(obs,table_MNL_1, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
colnames(table) = c('Observed', "MNL_2", "MNL_3", "BG_1","MS_1" )
rownames(table) = c("gain ib moyen", "gain ib median en \\%", "\\% gain ib > 0",
"gain ib moyen TTH1", "gain ib median en \\% TTH1", "\\% gain ib > 0  TTH1",
"gain ib moyen TTH2", "gain ib median en \\% TTH2", "\\% gain ib > 0  TTH2",
"gain ib moyen TTH3", "gain ib median en \\% TTH3", "\\% gain ib > 0 TTH3",
"gain ib moyen TTH4", "gain ib median en \\% TTH4", "\\% gain ib > 0 TTH4",
"gain ib moyen no_exit", "\\% gain ib > 0 no_exit",
"gain ib moyen exit_next", "\\% gain ib > 0 exit_next",
"gain ib moyen exit_oth", "\\% gain ib > 0 exit_oth"
)
mdigit <- matrix(c(rep(2,(ncol(table)+1)*12),rep(0,(ncol(table)+1)*8)),
nrow = nrow(table), ncol=ncol(table)+1, byrow=T)
print(xtable(table,nrow = nrow(table_movers),
ncol=ncol(table_movers)+1, byrow=T, digits = 2),
sanitize.text.function=identity,size="\\footnotesize", hline.after = c(0, 3, 6, 9, 12, 15, 17, 19, 21),
only.contents=F, include.colnames = T)
table = cbind(obs,table_MNL_1, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
s = table_gain_ib(output_global, "ib", "situation")
for (m in c("MNL_1","MNL_2", "MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(data = output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
for (m in c("MNL_1","MNL_2", "MNL_3", "BG_1","MS_1" ))
{
table = table_gain_ib(data = output_global, var_ib = paste0("ib_", m) , paste0("situation_", m) )
assign(paste0("table_", m), table)
}
table = cbind(obs,table_MNL_1, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
colnames(table) = c('Observed', "MNL_2", "MNL_3", "BG_1","MS_1" )
rownames(table) = c("gain ib moyen", "gain ib median en \\%", "\\% gain ib > 0",
"gain ib moyen TTH1", "gain ib median en \\% TTH1", "\\% gain ib > 0  TTH1",
"gain ib moyen TTH2", "gain ib median en \\% TTH2", "\\% gain ib > 0  TTH2",
"gain ib moyen TTH3", "gain ib median en \\% TTH3", "\\% gain ib > 0 TTH3",
"gain ib moyen TTH4", "gain ib median en \\% TTH4", "\\% gain ib > 0 TTH4",
"gain ib moyen no_exit", "\\% gain ib > 0 no_exit",
"gain ib moyen exit_next", "\\% gain ib > 0 exit_next",
"gain ib moyen exit_oth", "\\% gain ib > 0 exit_oth"
)
mdigit <- matrix(c(rep(2,(ncol(table)+1)*12),rep(0,(ncol(table)+1)*8)),
nrow = nrow(table), ncol=ncol(table)+1, byrow=T)
print(xtable(table,nrow = nrow(table_movers),
ncol=ncol(table_movers)+1, byrow=T, digits = 2),
sanitize.text.function=identity,size="\\footnotesize", hline.after = c(0, 3, 6, 9, 12, 15, 17, 19, 21),
only.contents=F, include.colnames = T)
table = cbind(obs,table_MNL_1, table_MNL_2, table_MNL_3, table_BG_1, table_MS_1)
rownames(table) = c("gain ib moyen", "gain ib median en \\%", "\\% gain ib > 0",
"gain ib moyen TTH1", "gain ib median en \\% TTH1", "\\% gain ib > 0  TTH1",
"gain ib moyen TTH2", "gain ib median en \\% TTH2", "\\% gain ib > 0  TTH2",
"gain ib moyen TTH3", "gain ib median en \\% TTH3", "\\% gain ib > 0 TTH3",
"gain ib moyen TTH4", "gain ib median en \\% TTH4", "\\% gain ib > 0 TTH4",
"gain ib moyen no_exit", "\\% gain ib > 0 no_exit",
"gain ib moyen exit_next", "\\% gain ib > 0 exit_next",
"gain ib moyen exit_oth", "\\% gain ib > 0 exit_oth"
)
mdigit <- matrix(c(rep(2,(ncol(table)+1)*12),rep(0,(ncol(table)+1)*8)),
nrow = nrow(table), ncol=ncol(table)+1, byrow=T)
print(xtable(table,nrow = nrow(table),
ncol=ncol(table_movers)+1, byrow=T, digits = 2),
sanitize.text.function=identity,size="\\footnotesize", hline.after = c(0, 3, 6, 9, 12, 15, 17, 19, 21),
only.contents=F, include.colnames = T)
table
View(table)
View(table)
